[include .dynamicmacros.cfg]
# This file contains common pin mappings for the BIGTREETECH SKR Pico V1.0
# To use this config, the firmware should be compiled for the RP2040 with
# USB communication.

# The "make flash" command does not work on the SKR Pico V1.0. Instead,
# after running "make", copy the generated "out/klipper.uf2" file
# to the mass storage device in RP2040 boot mode

# See docs/Config_Reference.md for a description of parameters.

[include toolchanger.cfg]
[include homing.cfg]
[include gantry_lila.cfg]
[include gantry_rot.cfg]
[include head_lila.cfg]
[include head_red.cfg]
 
[include nudge_calibrate.cfg]  # late include for using the correct probe

[include toolchanger_macros.cfg]
#[include macros_d0.cfg]

#[include nudge_calibrate.cfg]
[mcu]
serial: /dev/serial/by-id/usb-Klipper_rp2040_504434031087C81C-if00
#canbus_uuid:57cf20800b7f
#canbus_interface: can0

[save_variables]
filename: ~/offset_variables.cfg
#   Required - provide a filename that would be used to save the
#   variables to disk e.g. ~/variables.cfg
[idle_timeout]
timeout: 7200
[respond]
[dynamicmacros]
interface_workaround: true
#delimeter: 
configs: macros_d0.cfg, nudge_calibrate_macros.cfg, homing_macros.cfg 

[stepper_z] #vorne links

step_pin: gpio14
dir_pin: !gpio13
enable_pin: !gpio15
#endstop_pin: gpio16
endstop_pin: probe:z_virtual_endstop
microsteps: 128
rotation_distance: 40
#position_endstop: 0.0
position_min: -5
position_max: 250

[tmc2209 stepper_z]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 3
run_current: 1.0  # max 2.0
hold_current: 1.0
stealthchop_threshold: 999999

[stepper_z1] #vorne rechts
step_pin: gpio11
dir_pin: gpio10
enable_pin: !gpio12
#endstop_pin: gpio4
microsteps: 128
rotation_distance: 40
#position_endstop: 0.0
#position_max: 250

[tmc2209 stepper_z1]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 0
run_current: 1.0  # max 2.0
hold_current: 1.0
stealthchop_threshold: 999999


[stepper_z2] # hinten mitte
step_pin: gpio6
dir_pin: !gpio5
enable_pin: !gpio7
#endstop_pin: gpio3
microsteps: 128
rotation_distance: 40
#position_endstop: 0.0
#position_max: 250


[tmc2209 stepper_z2]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 2
run_current: 1.0  # max 2.0
hold_current: 1.0
stealthchop_threshold: 999999


### Z Axis realated Settings

#[safe_z_home]
# ##  XY Location of the Z Endstop Switch
# ##  Update -10,-10 to the XY coordinates of your endstop pin 
# ##  (such as 157,305) after going through Z Endstop Pin
# ##  Location Definition step.
#home_xy_position: 90, 160
#speed:25
#z_hop:4

[z_tilt]
z_positions:
    -70, -17
    240, -17
    85, 205
# vorne links , z
# vorne rechts , z1
# hinten mitte z2


points:
    17, 0
    160, 0
    96, 160
# vorne links
# vorne rechts
# hinten mitte
  

speed: 200
horizontal_move_z: 4
retries: 10
retry_tolerance: 0.007  # best is achieved was 0.0017

[bed_mesh]
speed: 120
horizontal_move_z: 5
mesh_min: 5, 30 
mesh_max: 120, 140
probe_count: 3, 3


#[probe]
#pin: ^head_lila:PB6
#z_offset: 2.0
#speed: 5.0
#   Speed (in mm/s) of the Z axis when probing. The default is 5mm/s.
#samples: 3
#   The number of times to probe each point. The probed z-values will
#   be averaged. The default is to probe 1 time.
#sample_retract_dist: 3.0
#   The distance (in mm) to lift the toolhead between each sample (if
#   sampling more than once). The default is 2mm.
#lift_speed: 5.0
#   Speed (in mm/s) of the Z axis when lifting the probe between
#   samples. The default is to use the same value as the 'speed'
#   parameter.
#samples_result: average
#   The calculation method when sampling more than once - either
#   "median" or "average". The default is average.
#samples_tolerance: 0.010
#   The maximum Z distance (in mm) that a sample may differ from other
#   samples. If this tolerance is exceeded then either an error is
#   reported or the attempt is restarted (see
#   samples_tolerance_retries). The default is 0.100mm.
#samples_tolerance_retries: 2
#   The number of times to retry if a sample is found that exceeds
#   samples_tolerance. On a retry, all current samples are discarded
#   and the probe attempt is restarted. If a valid set of samples are
#   not obtained in the given number of retries then an error is
#   reported. The default is zero which causes an error to be reported
#   on the first sample that exceeds samples_tolerance.
#z_offset = -0.790

#[safe_z_home]


#[filament_switch_sensor nudge]
#pause_on_runout: false

#runout_gcode:
#   A list of G-Code commands to execute after a filament runout is
#   detected. See docs/Command_Templates.md for G-Code format. If
#   pause_on_runout is set to True this G-Code will run after the
#   PAUSE is complete. The default is not to run any G-Code commands.
#insert_gcode:
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
#event_delay: 3.0
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
#pause_delay: 0.5
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.
#switch_pin: ^!gpio25
#   The pin on which the switch is connected. This parameter must be
#   provided.

[heater_bed]
heater_pin: gpio23
sensor_type: Generic 3950
sensor_pin: gpio27 # 26 / 27
control = pid
pid_kp = 46.021
pid_ki = 3.068
pid_kd = 172.577
pwm_cycle_time: 0.3
min_temp: 0
max_temp: 115

#[fan]
#pin: gpio17

#[heater_fan heatbreak_cooling_fan]
#pin: gpio18

#[heater_fan controller_fan]
#pin: gpio20

[temperature_sensor pico]
sensor_type: temperature_mcu



[printer]
kinematics: dualgantry_corexy
#kinematics: corexy
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

[neopixel board_neopixel]
pin: gpio24
chain_count: 1
color_order: GRB
initial_RED: 0.01
initial_GREEN: 0.01
initial_BLUE: 0.01

#[bltouch]
#sensor_pin: gpio22
#control_pin: gpio29

#[filament_switch_sensor runout_sensor]
#switch_pin: ^gpio16


#fluiid reqs
[virtual_sdcard]
path: ~/printer_data/gcodes

#Required to properly support display updates in fluidd- with no other lines required.
[display_status]


#Enables Pause / Resume functionality within klipper. This is a single block, with no other lines required.
[pause_resume]


# default marcos
[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

  [gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE




#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.790000, 0.808750, 0.802500
#*# 	  0.743125, 0.799375, 0.821250
#*# 	  0.710313, 0.769688, 0.796250
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 5.0
#*# max_x = 120.0
#*# min_y = 30.0
#*# max_y = 140.0
