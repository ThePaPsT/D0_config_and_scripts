[toolchanger]
#t_command_restore_axis: 
#params_safe_y: 120
#params_close_y: 15
#params_fast_speed: 30000 # Go as fast as we can
#params_path_speed: 900 # 20mm/s for the actual change
# Path positions relative to the park position
# use x,y,z; f= multiplier to path speed; verify= Verify tool detected at end of the move.
#params_dropoff_path: [ Set the path for your printer, see tool_paths.md ]
#params_pickup_path: [ Set the path for your printer, see tool_paths.md ]
# Parking position - per tool
#params_park_x: 142.2
#params_park_y: -6.0
#params_park_z: 308.2
# Default shaper params
#params_input_shaper_freq_x: 62.4
#params_input_shaper_freq_y: 88.6
initialize_on: first-use

initialize_gcode:
  {% set svv = printer.save_variables.variables %}
  RESTORE_TOOL_OFFSETS T=1 X={svv.t1_offset_x} Y={svv.t1_offset_y} Z={svv.t1_offset_z}
#before_change_gcode:
#after_change_gcode:
#dropoff_gcode:
#pickup_gcode:
uses_axis: 


[tool_probe_endstop]
  crash_gcode:
    RESPOND TYPE=error MSG='Tool not detected, expected {printer.toolchanger.tool_number}. Pausing the print.' 
    M84
    TURN_OFF_HEATERS
 

[gcode_macro _TAP_PROBE_ACTIVATE]
description: Ensure safe temp for bed probing
gcode:
    {% set max_temp = 150 %}
    {% set actual_temp = printer[params.HEATER].temperature %}
    {% set target_temp = printer[params.HEATER].target %}
    {% if target_temp > max_temp %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (target_temp, max_temp)) }
        SET_HEATER_TEMPERATURE HEATER={params.HEATER} TARGET={ max_temp|int - 5 }
    {% endif %}
    # Temperature target is already low enough, but nozzle may still be too hot.
    {% if actual_temp > max_temp  + 2 %}
        { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (actual_temp, max_temp)) }
        TEMPERATURE_WAIT SENSOR={params.HEATER} MAXIMUM={ max_temp }
    {% endif %}


[gcode_macro _INITIALIZE_FROM_DETECTED_TOOL]
gcode:
  DETECT_ACTIVE_TOOL_PROBE
  _INITIALIZE_FROM_DETECTED_TOOL_IMPL

[gcode_macro _INITIALIZE_FROM_DETECTED_TOOL_IMPL]
gcode:
  {% if printer.tool_probe_endstop.active_tool_number | int == -1 %}
    RESPOND TYPE=error MSG='Failed to detect active tool'
    PAUSE
  {% else %}
    { action_respond_info('initialize from detected tool')}
    INITIALIZE_TOOLCHANGER T={printer.tool_probe_endstop.active_tool_number}
  {% endif %}

[gcode_macro _VERIFY_TOOL_DETECTED]
gcode:
    G4 P200
    START_TOOL_PROBE_CRASH_DETECTION T={params.T}


#### XY-Probing Section 

